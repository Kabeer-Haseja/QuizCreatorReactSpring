{"version":3,"sources":["Components/createquiz.js","App.js","reportWebVitals.js","index.js"],"names":["Createquiz","useState","flag","setFlag","increment","count","setcount","choiceboolen","setchoiceboolean","Question_Body","setQuestion_Body","isCorrect","setisCorrect","Question_Text","setQuestion_Text","Question_Points","setQuestion_Points","q_type","setq_type","q_choice","Questions","q_title","setqtitle","q_totalpoints","setq_totalpoints","q_timeAllowed","setq_timeAllowed","q_datetime","setq_datetime","qchoicepush","setqchoicepush","data","setData","change","addingqpoint","e","target","value","class","Form","Group","Label","Control","type","name","placeholder","onChange","onClick","push","alert","preVal","as","rows","Row","Col","sm","Check","label","App","className","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ee6bfb23.chunk.js","sourcesContent":["import  {  React,useState } from 'react';\r\nimport '../App.css';\r\nimport { Button,Container,Form,FormControl,Row,Col } from 'react-bootstrap';\r\nimport axios from 'axios';\r\nexport default function Createquiz(){\r\n    const [flag,setFlag] = useState(2);\r\n    const [increment,setincrement] = useState(1);\r\n    const[count,setcount]=useState(0);\r\n    const[choiceboolen,setchoiceboolean]=useState(false)\r\n    const [Question_Body, setQuestion_Body] = useState('')\r\n    const [isCorrect,setisCorrect]=useState(false)\r\n    const [Question_Text,setQuestion_Text]=useState('')\r\n    const[Question_Points,setQuestion_Points]=useState('')\r\n    const[q_type,setq_type]=useState('')\r\n    const[q_choice,setq_choice]=useState([])\r\n    const[Questions,setQuestions]=useState([])\r\n    const[varq,setvarq]=useState('');\r\n    const[q_title,setqtitle]=useState('');\r\n    const[q_totalpoints,setq_totalpoints]=useState('')\r\n    const[ q_timeAllowed,setq_timeAllowed]=useState('')\r\n    const[q_datetime,setq_datetime]=useState('')\r\n    const[qchoicepush,setqchoicepush]=useState(-1);\r\n    const [data,setData] = useState(\r\n        [\r\n      \r\n            \r\n         ] )\r\n    \r\n const abc=()=>{\r\n            setqchoicepush(qchoicepush+1)\r\n            alert(qchoicepush);\r\n                 }\r\n    const change = () =>{\r\n    \r\n        setFlag(3)\r\n        \r\n        }\r\n    const change1 = () =>{\r\n        setFlag(4)\r\n        \r\n    }\r\n    const change2=()=>{\r\n        setFlag(2)\r\n        setcount(1)\r\n    }\r\n    const addingChoice = (e) =>{\r\n\r\n        setQuestion_Body(e.target.value)\r\n        setisCorrect(false)\r\n    }\r\n    const addingqtitle=(e)=>{\r\n        setqtitle(e.target.value)\r\n     }\r\n   const addingqpoints=(e)=>{\r\n    setq_totalpoints(e.target.value);\r\n   \r\n   }\r\n   const addingq_datetime=(e)=>{\r\n       setq_datetime(e.target.value)\r\n   }\r\n   const addingqtimeallowed=(e)=>{\r\n    setq_timeAllowed(e.target.value)\r\n}\r\n\r\n    const addingQuestion=(e)=>{\r\n        setQuestion_Text(e.target.value)\r\n    }\r\n    const addingPoints=(e)=>{\r\n        setQuestion_Points(e.target.value)\r\n    }\r\n    const addingqpoint=(e)=>{\r\n        setq_type(e.target.value)\r\n        \r\n    }\r\n    const addingData = (e)=>{\r\n        const {name, value} = e.target;\r\n        setqtitle(e.target.value);\r\n        \r\n        setData((preVal)=>{\r\n            return {\r\n                ...preVal,\r\n                [name]:value\r\n            }\r\n\r\n        }\r\n        )\r\n        const savedata=()=>{\r\n            axios.post('http://localhost:8080/question',{data})\r\n            .then(res => {\r\n                \r\n                console.log(res.q_title);\r\n              })\r\n        }\r\n     \r\n    }\r\n    return(\r\n        \r\n\r\n        <>\r\n        <div class=\"container col-4 float-left p-6\"  >\r\n               \r\n        {\r\n           \r\n\r\n           \r\n           (flag==2)?  <Form>\r\n           <Form.Group >\r\n             <Form.Label>Quiz Title</Form.Label>\r\n             <Form.Control type=\"text\" name=\"q_title\" value={q_title} placeholder=\"Quiz Title\" onChange={addingqtitle} />\r\n           </Form.Group> \r\n         \r\n           <Form.Group >\r\n             <Form.Label>Total points</Form.Label>\r\n             <Form.Control type=\"number\" name=\"q_totalpoints\" value={q_totalpoints} placeholder=\"Total points\"onChange={addingqpoints} />\r\n           </Form.Group>\r\n           <div class=\"row\">\r\n               <div class=\"col-6\">\r\n           <Form.Group  >\r\n               <Form.Label>Time Allowed</Form.Label>\r\n                <Form.Control  type=\"number\" name=\"q_timeAllowed\" value={q_timeAllowed} onChange={addingqtimeallowed} />\r\n                </Form.Group>\r\n                </div>\r\n                <div class=\"col-6\">\r\n                <Form.Group  >\r\n                <Form.Label>Select Date </Form.Label>\r\n              \r\n             <Form.Control type=\"date\" name=\"q_datetime\" onChange={addingq_datetime} value={q_datetime}/>\r\n          \r\n           </Form.Group>\r\n           </div>\r\n          \r\n         <Form.Group class=\"row\">\r\n             <div class=\"col-12\">\r\n             <Form.Label>Question  </Form.Label>\r\n           <div class=\"card col-12 w-100\">\r\n           <div class=\"card-body\">\r\n             <p class=\"card-text\">With supporting text below as a natural lead-in to additional content.</p>\r\n             <button onClick={()=>{\r\n             if(choiceboolen===false)\r\n             {\r\n             data.push({q_title,q_timeAllowed,q_datetime,q_totalpoints,Questions})\r\n             } \r\n             else{\r\n            setchoiceboolean(true)\r\n             }\r\n             abc()     \r\n             change()\r\n             }} type=\"button\" class=\"btn btn-primary\"onChange={addingData} >Add Question </button>\r\n           </div>\r\n         </div>\r\n             </div>\r\n           \r\n         </Form.Group>\r\n             </div>\r\n             <Form.Group class=\"row\">\r\n                 <div class=\" text-right\">\r\n                     <button type=\"button\" class=\"btn btn-light\">Cancel</button>\r\n                     <button type=\"button\" class=\"btn btn-success\">Save</button>\r\n                 </div>\r\n             </Form.Group>\r\n         \r\n         </Form>\r\n    :\r\n    (flag==3) ?<Form>\r\n     <Form.Group >\r\n  <Form.Label>Question</Form.Label>\r\n  <Form.Control as=\"textarea\" rows={3} name=\"Question_Text\" value={Question_Text} onChange={addingQuestion  \r\n     } />\r\n</Form.Group>\r\n     <Form.Group >\r\n       <Form.Label>Total points</Form.Label>\r\n       <Form.Control type=\"number\" name=\"Question_Points\" value={Question_Points} placeholder=\"Total points\"onChange={addingPoints} />\r\n     </Form.Group>\r\n     <fieldset>\r\n    <Form.Group as={Row} class=\"text-left\">\r\n        <Col sm={10}>\r\n        \r\n        <Form.Check\r\n          type=\"radio\"\r\n          label=\"Single_Choice\"\r\n          name={q_type}\r\n          value=\"Single_Choice\"\r\n          onChange={addingqpoint}\r\n          \r\n        />\r\n        <Form.Check\r\n          type=\"radio\"\r\n          label=\"Multiple_Choice\"\r\n          name={q_type}\r\n          value=\"Multiple Choice\"\r\n          onChange={addingqpoint}\r\n         \r\n          />\r\n      \r\n      </Col>\r\n    </Form.Group>\r\n  </fieldset>\r\n\r\n   <Form.Group class=\"row\">\r\n       <div class=\"col-12\">\r\n       <Form.Label>Question  </Form.Label>\r\n     <div class=\"card col-12 w-100\">\r\n     <div class=\"card-body\">\r\n      \r\n       <button  type=\"button\" class=\"btn btn-primary\" onClick={()=>{\r\n          if(choiceboolen===false){  \r\n          data[0].Questions.push({Question_Text,Question_Points,q_type,q_choice})    \r\n             setchoiceboolean(true)\r\n          }\r\n          else if(count==increment){\r\n         data[0].Questions.push({Question_Text,Question_Points,q_type,q_choice})    \r\n          alert(\"increment value\"+increment)\r\n        }\r\n           change1()\r\n           \r\n         }}>Add Choice</button>\r\n     </div>\r\n   </div>\r\n       </div>\r\n   </Form.Group>\r\n       <Form.Group class=\"row\">\r\n           <div class=\" text-right\">\r\n               <button type=\"button\" class=\"btn btn-light\">Cancel</button>\r\n               <button type=\"button\" class=\"btn btn-success\" onClick={()=>{\r\n                   change2()\r\n\r\n}}>Save</button>\r\n           </div>\r\n       </Form.Group>\r\n   \r\n   </Form>\r\n  :\r\n  (flag==4)?\r\n            <Form>\r\n  <Form.Group>\r\n    <Form.Label>Choice</Form.Label>\r\n    <Form.Control type=\"text\"  value={Question_Body} placeholder=\"Question Choice\" onChange={addingChoice} />\r\n  </Form.Group>\r\n  <Form.Group class=\"text-left\">\r\n    <Form.Check type=\"checkbox\"  value={isCorrect} label=\"Correct Option\" class=\"text-left\"onClick={()=>{\r\n        if(!isCorrect)\r\n        {\r\n            setisCorrect(true)\r\n           }\r\n        \r\n    }} />\r\n  </Form.Group>\r\n \r\n       <Form.Group class=\"row\">\r\n           <div class=\" text-right\">\r\n               <button type=\"button\"  class=\"btn btn-light\">Cancel</button>\r\n               <button type=\"reset\"    class=\"btn btn-success\" onClick={()=>{\r\n            //       data['Questions'][0].q_choice.push({Question_Body,isCorrect})\r\n                    alert(qchoicepush)\r\n                      data[0].Questions[qchoicepush].q_choice.push({Question_Body,isCorrect})    \r\n                   \r\n                   change()\r\n\r\n               }} name  >save Choice</button>\r\n           </div>\r\n       </Form.Group>\r\n   \r\n</Form>\r\n\r\n  \r\n:\r\n<div></div>\r\n        \r\n}\r\n </div>\r\n             \r\n                    </>\r\n );\r\n\r\n\r\n        \r\n}  \r\n","import './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Createquiz from './Components/createquiz'\n\nfunction App() {\n  return (\n    \n    <div className=\"App\">\n    <Createquiz/>\n    </div>\n    \n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}